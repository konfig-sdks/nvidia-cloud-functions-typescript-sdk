/*
Cloud Functions

Since its founding in 1993, NVIDIA (NASDAQ: NVDA) has been a pioneer in accelerated computing. The company's invention of the GPU in 1999 sparked the growth of the PC gaming market, redefined computer graphics, ignited the era of modern AI and is fueling the creation of the metaverse. NVIDIA is now a full-stack computing company with data-center-scale offerings that are reshaping industry.

The version of the OpenAPI document: 2.87.3


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AssetManagementApi,
  AuthorizedAccountsApi,
  ClusterGroupsAndGPUsApi,
  EnvelopeFunctionInvocationApi,
  FunctionDeploymentApi,
  FunctionInvocationApi,
  FunctionManagementApi,
  HealthApi,
  QueueDetailsApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { NvidiaCloudFunctionsCustom } from "./client-custom";

export class NvidiaCloudFunctions extends NvidiaCloudFunctionsCustom {
  readonly assetManagement: AssetManagementApi;
  readonly authorizedAccounts: AuthorizedAccountsApi;
  readonly clusterGroupsAndGPUs: ClusterGroupsAndGPUsApi;
  readonly envelopeFunctionInvocation: EnvelopeFunctionInvocationApi;
  readonly functionDeployment: FunctionDeploymentApi;
  readonly functionInvocation: FunctionInvocationApi;
  readonly functionManagement: FunctionManagementApi;
  readonly health: HealthApi;
  readonly queueDetails: QueueDetailsApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.assetManagement = new AssetManagementApi(configuration);
    this.authorizedAccounts = new AuthorizedAccountsApi(configuration);
    this.clusterGroupsAndGPUs = new ClusterGroupsAndGPUsApi(configuration);
    this.envelopeFunctionInvocation = new EnvelopeFunctionInvocationApi(configuration);
    this.functionDeployment = new FunctionDeploymentApi(configuration);
    this.functionInvocation = new FunctionInvocationApi(configuration);
    this.functionManagement = new FunctionManagementApi(configuration);
    this.health = new HealthApi(configuration);
    this.queueDetails = new QueueDetailsApi(configuration);
  }

}
